name: CI

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.x'

      - name: Get directories to cache
        id: cache-dirs
        run: |
          echo "::set-output name=dependencies::$(go env GOPATH)/pkg/mod"
          echo "::set-output name=build::$(go env GOCACHE)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache-dirs.outputs.dependencies }}
            ${{ steps.cache-dirs.outputs.build }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Build
        run: make

  ffmpeg:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch ffmpeg release metadata
        id: ffmpeg-metadata
        run: |
          echo "::set-output name=version::$(curl -s https://www.gyan.dev/ffmpeg/builds/release-version)"
          curl -os sum.txt https://www.gyan.dev/ffmpeg/builds/sha256-release-essentials-zip

      - name: Restore ffmpeg cache
        uses: actions/cache@v2
        with:
          path: bin
          key: ${{ runner.os }}-ffmpeg-${{ steps.ffmpeg-metadata.outputs.version }}

      - name: Download latest ffmpeg build from release branch
        run: |
          if [ -d bin ]; then
            echo "No ffmpeg update available"
            exit 0
          fi

          echo "Updating ffmpeg..."
          mkdir bin
          curl -fs https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip | tee bin/ffmpeg.zip | sha256sum -c sum.txt
